{"ast":null,"code":"import{useState,useEffect}from'react';// Sezon tarihleri, sağlanan programlara göre hassas bir şekilde ayarlandı.\nconst SEASONS={// Yaz Sezonu - Faz 1: İngilizce Ağırlıklı Hazırlık (1. Program Şablonu)\nSEASON_1_PREP:{START:new Date('2025-06-21'),END:new Date('2025-07-31')},// Yaz Sezonu - Faz 2: Yoğun YKS Temposu (2. Program Şablonu)\nSEASON_1_INTENSE:{START:new Date('2025-08-01'),END:new Date('2025-09-15')},// Okul Dönemi (3. Program Şablonu)\nSEASON_2_SCHOOL:{START:new Date('2025-09-16'),END:new Date('2026-03-15')},// YKS Kampı (4. ve 5. Program Şablonu - En detaylı olanı esas alındı)\nSEASON_3_CAMP:{START:new Date('2026-03-16'),END:new Date('2026-06-21')},// YKS Sonrası - Sonuç ve Tercih Dönemi\nSEASON_4_POST_YKS:{START:new Date('2026-06-22'),END:new Date('2026-09-15')}};export const useSeason=()=>{const[seasonInfo,setSeasonInfo]=useState({key:'off_season',name:'SİSTEM BAŞLATILIYOR...'});useEffect(()=>{const now=new Date();// const now = new Date('2025-08-05'); // FARKLI SEZONLARI TEST ETMEK İÇİN TARİHİ DEĞİŞTİREBİLİRSİN\nif(now>=SEASONS.SEASON_1_PREP.START&&now<=SEASONS.SEASON_1_PREP.END){setSeasonInfo({key:'season1_prep',name:'KURULUM: İngilizce Hazırlık Fazı'});}else if(now>=SEASONS.SEASON_1_INTENSE.START&&now<=SEASONS.SEASON_1_INTENSE.END){setSeasonInfo({key:'season1_intense',name:'KURULUM: Yoğun YKS Fazı'});}else if(now>=SEASONS.SEASON_2_SCHOOL.START&&now<=SEASONS.SEASON_2_SCHOOL.END){setSeasonInfo({key:'season2_school',name:'DENEY: Okul Dönemi'});}else if(now>=SEASONS.SEASON_3_CAMP.START&&now<=SEASONS.SEASON_3_CAMP.END){setSeasonInfo({key:'season3_camp',name:'SENTEZ: Nihai YKS Kampı'});}else if(now>=SEASONS.SEASON_4_POST_YKS.START&&now<=SEASONS.SEASON_4_POST_YKS.END){setSeasonInfo({key:'season4_post_yks',name:'SONUÇ: Değerlendirme Fazı'});}else{setSeasonInfo({key:'off_season',name:'BEKLEME MODU'});}},[]);return seasonInfo;};","map":{"version":3,"names":["useState","useEffect","SEASONS","SEASON_1_PREP","START","Date","END","SEASON_1_INTENSE","SEASON_2_SCHOOL","SEASON_3_CAMP","SEASON_4_POST_YKS","useSeason","seasonInfo","setSeasonInfo","key","name","now"],"sources":["C:/Users/Juuzou/Desktop/YKS/genesis/src/hooks/useSeason.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// Sezon tarihleri, sağlanan programlara göre hassas bir şekilde ayarlandı.\r\nconst SEASONS = {\r\n  // Yaz Sezonu - Faz 1: İngilizce Ağırlıklı Hazırlık (1. Program Şablonu)\r\n  SEASON_1_PREP: { START: new Date('2025-06-21'), END: new Date('2025-07-31') },\r\n  // Yaz Sezonu - Faz 2: Yoğun YKS Temposu (2. Program Şablonu)\r\n  SEASON_1_INTENSE: { START: new Date('2025-08-01'), END: new Date('2025-09-15') },\r\n  // Okul Dönemi (3. Program Şablonu)\r\n  SEASON_2_SCHOOL: { START: new Date('2025-09-16'), END: new Date('2026-03-15') },\r\n  // YKS Kampı (4. ve 5. Program Şablonu - En detaylı olanı esas alındı)\r\n  SEASON_3_CAMP: { START: new Date('2026-03-16'), END: new Date('2026-06-21') },\r\n  // YKS Sonrası - Sonuç ve Tercih Dönemi\r\n  SEASON_4_POST_YKS: { START: new Date('2026-06-22'), END: new Date('2026-09-15') },\r\n};\r\n\r\nexport const useSeason = () => {\r\n  const [seasonInfo, setSeasonInfo] = useState({ key: 'off_season', name: 'SİSTEM BAŞLATILIYOR...' });\r\n\r\n  useEffect(() => {\r\n    const now = new Date();\r\n    // const now = new Date('2025-08-05'); // FARKLI SEZONLARI TEST ETMEK İÇİN TARİHİ DEĞİŞTİREBİLİRSİN\r\n\r\n    if (now >= SEASONS.SEASON_1_PREP.START && now <= SEASONS.SEASON_1_PREP.END) {\r\n      setSeasonInfo({ key: 'season1_prep', name: 'KURULUM: İngilizce Hazırlık Fazı' });\r\n    } else if (now >= SEASONS.SEASON_1_INTENSE.START && now <= SEASONS.SEASON_1_INTENSE.END) {\r\n      setSeasonInfo({ key: 'season1_intense', name: 'KURULUM: Yoğun YKS Fazı' });\r\n    } else if (now >= SEASONS.SEASON_2_SCHOOL.START && now <= SEASONS.SEASON_2_SCHOOL.END) {\r\n      setSeasonInfo({ key: 'season2_school', name: 'DENEY: Okul Dönemi' });\r\n    } else if (now >= SEASONS.SEASON_3_CAMP.START && now <= SEASONS.SEASON_3_CAMP.END) {\r\n      setSeasonInfo({ key: 'season3_camp', name: 'SENTEZ: Nihai YKS Kampı' });\r\n    } else if (now >= SEASONS.SEASON_4_POST_YKS.START && now <= SEASONS.SEASON_4_POST_YKS.END) {\r\n      setSeasonInfo({ key: 'season4_post_yks', name: 'SONUÇ: Değerlendirme Fazı' });\r\n    } else {\r\n      setSeasonInfo({ key: 'off_season', name: 'BEKLEME MODU' });\r\n    }\r\n  }, []);\r\n\r\n  return seasonInfo;\r\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C;AACA,KAAM,CAAAC,OAAO,CAAG,CACd;AACAC,aAAa,CAAE,CAAEC,KAAK,CAAE,GAAI,CAAAC,IAAI,CAAC,YAAY,CAAC,CAAEC,GAAG,CAAE,GAAI,CAAAD,IAAI,CAAC,YAAY,CAAE,CAAC,CAC7E;AACAE,gBAAgB,CAAE,CAAEH,KAAK,CAAE,GAAI,CAAAC,IAAI,CAAC,YAAY,CAAC,CAAEC,GAAG,CAAE,GAAI,CAAAD,IAAI,CAAC,YAAY,CAAE,CAAC,CAChF;AACAG,eAAe,CAAE,CAAEJ,KAAK,CAAE,GAAI,CAAAC,IAAI,CAAC,YAAY,CAAC,CAAEC,GAAG,CAAE,GAAI,CAAAD,IAAI,CAAC,YAAY,CAAE,CAAC,CAC/E;AACAI,aAAa,CAAE,CAAEL,KAAK,CAAE,GAAI,CAAAC,IAAI,CAAC,YAAY,CAAC,CAAEC,GAAG,CAAE,GAAI,CAAAD,IAAI,CAAC,YAAY,CAAE,CAAC,CAC7E;AACAK,iBAAiB,CAAE,CAAEN,KAAK,CAAE,GAAI,CAAAC,IAAI,CAAC,YAAY,CAAC,CAAEC,GAAG,CAAE,GAAI,CAAAD,IAAI,CAAC,YAAY,CAAE,CAClF,CAAC,CAED,MAAO,MAAM,CAAAM,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,CAAEc,GAAG,CAAE,YAAY,CAAEC,IAAI,CAAE,wBAAyB,CAAC,CAAC,CAEnGd,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,GAAG,CAAG,GAAI,CAAAX,IAAI,CAAC,CAAC,CACtB;AAEA,GAAIW,GAAG,EAAId,OAAO,CAACC,aAAa,CAACC,KAAK,EAAIY,GAAG,EAAId,OAAO,CAACC,aAAa,CAACG,GAAG,CAAE,CAC1EO,aAAa,CAAC,CAAEC,GAAG,CAAE,cAAc,CAAEC,IAAI,CAAE,kCAAmC,CAAC,CAAC,CAClF,CAAC,IAAM,IAAIC,GAAG,EAAId,OAAO,CAACK,gBAAgB,CAACH,KAAK,EAAIY,GAAG,EAAId,OAAO,CAACK,gBAAgB,CAACD,GAAG,CAAE,CACvFO,aAAa,CAAC,CAAEC,GAAG,CAAE,iBAAiB,CAAEC,IAAI,CAAE,yBAA0B,CAAC,CAAC,CAC5E,CAAC,IAAM,IAAIC,GAAG,EAAId,OAAO,CAACM,eAAe,CAACJ,KAAK,EAAIY,GAAG,EAAId,OAAO,CAACM,eAAe,CAACF,GAAG,CAAE,CACrFO,aAAa,CAAC,CAAEC,GAAG,CAAE,gBAAgB,CAAEC,IAAI,CAAE,oBAAqB,CAAC,CAAC,CACtE,CAAC,IAAM,IAAIC,GAAG,EAAId,OAAO,CAACO,aAAa,CAACL,KAAK,EAAIY,GAAG,EAAId,OAAO,CAACO,aAAa,CAACH,GAAG,CAAE,CACjFO,aAAa,CAAC,CAAEC,GAAG,CAAE,cAAc,CAAEC,IAAI,CAAE,yBAA0B,CAAC,CAAC,CACzE,CAAC,IAAM,IAAIC,GAAG,EAAId,OAAO,CAACQ,iBAAiB,CAACN,KAAK,EAAIY,GAAG,EAAId,OAAO,CAACQ,iBAAiB,CAACJ,GAAG,CAAE,CACzFO,aAAa,CAAC,CAAEC,GAAG,CAAE,kBAAkB,CAAEC,IAAI,CAAE,2BAA4B,CAAC,CAAC,CAC/E,CAAC,IAAM,CACLF,aAAa,CAAC,CAAEC,GAAG,CAAE,YAAY,CAAEC,IAAI,CAAE,cAAe,CAAC,CAAC,CAC5D,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAH,UAAU,CACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}