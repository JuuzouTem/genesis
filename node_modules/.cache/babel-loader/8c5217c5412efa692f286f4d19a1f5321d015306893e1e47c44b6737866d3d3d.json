{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juuzou\\\\Desktop\\\\YKS\\\\genesis\\\\src\\\\components\\\\layout\\\\StatusBar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useUserProgress } from '../../contexts/UserProgressContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusBarContainer = styled.div`\n  background: ${({\n  theme\n}) => theme.colors.surface};\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 2px solid ${({\n  theme\n}) => theme.colors.primary};\n  margin-bottom: 2rem;\n`;\n_c = StatusBarContainer;\nconst StatsGroup = styled.div`\n  display: flex;\n  gap: 2rem;\n  font-family: ${({\n  theme\n}) => theme.fonts.headings};\n  font-size: 1.1rem;\n`;\n_c2 = StatsGroup;\nconst Stat = styled.div`\n  span {\n    color: ${({\n  theme\n}) => theme.colors.secondary};\n    margin-right: 0.5rem;\n  }\n`;\n_c3 = Stat;\nconst DnaHelixContainer = styled.div`\n    width: 250px;\n    height: 20px;\n    background: #333;\n    border-radius: 10px;\n    overflow: hidden;\n    border: 1px solid ${({\n  theme\n}) => theme.colors.secondary};\n`;\n_c4 = DnaHelixContainer;\nconst DnaHelixProgress = styled.div`\n    width: ${props => props.progress}%;\n    height: 100%;\n    background: linear-gradient(90deg, ${({\n  theme\n}) => theme.colors.primary}, ${({\n  theme\n}) => theme.colors.secondary});\n    transition: width 0.5s ease-in-out;\n`;\n_c5 = DnaHelixProgress;\nfunction StatusBar() {\n  _s();\n  const {\n    ap,\n    vk,\n    level,\n    LEVEL_THRESHOLDS\n  } = useUserProgress();\n\n  // DNA sarmalının tamamlanma yüzdesi (Son seviyeye göre)\n  const totalApForCompletion = LEVEL_THRESHOLDS[LEVEL_THRESHOLDS.length - 1];\n  const progressPercent = Math.min(ap / totalApForCompletion * 100, 100);\n  return /*#__PURE__*/_jsxDEV(StatusBarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StatsGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Stat, {\n        children: [\"YS: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stat, {\n        children: [\"AP: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stat, {\n        children: [\"VK: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: vk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DnaHelixContainer, {\n        title: `Tamamlanma: %${progressPercent.toFixed(2)}`,\n        children: /*#__PURE__*/_jsxDEV(DnaHelixProgress, {\n          progress: progressPercent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusBar, \"dxr0CWLZm/4Wu4ltkRLqWeKX818=\", false, function () {\n  return [useUserProgress];\n});\n_c6 = StatusBar;\nexport default StatusBar;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"StatusBarContainer\");\n$RefreshReg$(_c2, \"StatsGroup\");\n$RefreshReg$(_c3, \"Stat\");\n$RefreshReg$(_c4, \"DnaHelixContainer\");\n$RefreshReg$(_c5, \"DnaHelixProgress\");\n$RefreshReg$(_c6, \"StatusBar\");","map":{"version":3,"names":["React","styled","useUserProgress","jsxDEV","_jsxDEV","StatusBarContainer","div","theme","colors","surface","primary","_c","StatsGroup","fonts","headings","_c2","Stat","secondary","_c3","DnaHelixContainer","_c4","DnaHelixProgress","props","progress","_c5","StatusBar","_s","ap","vk","level","LEVEL_THRESHOLDS","totalApForCompletion","length","progressPercent","Math","min","children","fileName","_jsxFileName","lineNumber","columnNumber","title","toFixed","_c6","$RefreshReg$"],"sources":["C:/Users/Juuzou/Desktop/YKS/genesis/src/components/layout/StatusBar.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useUserProgress } from '../../contexts/UserProgressContext';\r\n\r\nconst StatusBarContainer = styled.div`\r\n  background: ${({ theme }) => theme.colors.surface};\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst StatsGroup = styled.div`\r\n  display: flex;\r\n  gap: 2rem;\r\n  font-family: ${({ theme }) => theme.fonts.headings};\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst Stat = styled.div`\r\n  span {\r\n    color: ${({ theme }) => theme.colors.secondary};\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst DnaHelixContainer = styled.div`\r\n    width: 250px;\r\n    height: 20px;\r\n    background: #333;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    border: 1px solid ${({ theme }) => theme.colors.secondary};\r\n`;\r\n\r\nconst DnaHelixProgress = styled.div`\r\n    width: ${props => props.progress}%;\r\n    height: 100%;\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.colors.primary}, ${({ theme }) => theme.colors.secondary});\r\n    transition: width 0.5s ease-in-out;\r\n`;\r\n\r\nfunction StatusBar() {\r\n  const { ap, vk, level, LEVEL_THRESHOLDS } = useUserProgress();\r\n  \r\n  // DNA sarmalının tamamlanma yüzdesi (Son seviyeye göre)\r\n  const totalApForCompletion = LEVEL_THRESHOLDS[LEVEL_THRESHOLDS.length - 1];\r\n  const progressPercent = Math.min((ap / totalApForCompletion) * 100, 100);\r\n\r\n  return (\r\n    <StatusBarContainer>\r\n      <StatsGroup>\r\n        <Stat>YS: <span>{level}</span></Stat>\r\n        <Stat>AP: <span>{ap}</span></Stat>\r\n        <Stat>VK: <span>{vk}</span></Stat>\r\n      </StatsGroup>\r\n      <div>\r\n        <DnaHelixContainer title={`Tamamlanma: %${progressPercent.toFixed(2)}`}>\r\n            <DnaHelixProgress progress={progressPercent} />\r\n        </DnaHelixContainer>\r\n      </div>\r\n    </StatusBarContainer>\r\n  );\r\n}\r\n\r\nexport default StatusBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}