{"ast":null,"code":"import _objectSpread from\"C:/Users/Juuzou/Desktop/YKS/genesis/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useEffect}from'react';import{allAchievements}from'../data/achievements';import{jsx as _jsx}from\"react/jsx-runtime\";const LOCAL_STORAGE_KEY='projeGenesisUserProgress';const UserProgressContext=/*#__PURE__*/createContext();export const useUserProgress=()=>useContext(UserProgressContext);const LEVEL_THRESHOLDS=[0,500,1500,4000,8000,15000,25000,40000,60000,85000,120000];export const UserProgressProvider=_ref=>{let{children}=_ref;const[progress,setProgress]=useState(()=>{try{const savedProgress=localStorage.getItem(LOCAL_STORAGE_KEY);if(savedProgress){const parsed=JSON.parse(savedProgress);// DÜZELTME: Tüm Set'lerin doğru şekilde yeniden oluşturulması\nreturn{ap:parsed.ap||0,vk:parsed.vk||0,level:parsed.level||1,completedProtocols:new Set(parsed.completedProtocols||[]),purchasedItems:new Set(parsed.purchasedItems||[]),unlockedAchievements:new Set(parsed.unlockedAchievements||[])};}}catch(error){console.error(\"Failed to parse progress from localStorage\",error);}// DÜZELTME: Başlangıç state'inde tüm alanların olması\nreturn{ap:0,vk:0,level:1,completedProtocols:new Set(),purchasedItems:new Set(),unlockedAchievements:new Set()};});const[notification,setNotification]=useState(null);const showNotification=message=>{setNotification(message);setTimeout(()=>setNotification(null),4000);};// DÜZELTME: Tek ve birleştirilmiş useEffect\nuseEffect(()=>{// 1. Başarımları kontrol et\nallAchievements.forEach(ach=>{if(!progress.unlockedAchievements.has(ach.id)&&ach.condition(progress)){setProgress(prev=>_objectSpread(_objectSpread({},prev),{},{unlockedAchievements:new Set(prev.unlockedAchievements).add(ach.id)}));showNotification(\"Kilometre Ta\\u015F\\u0131 Ula\\u015F\\u0131ld\\u0131: \".concat(ach.name));}});// 2. Seviye atlamayı kontrol et\nconst nextLevelThreshold=LEVEL_THRESHOLDS[progress.level];if(nextLevelThreshold&&progress.ap>=nextLevelThreshold){const newLevel=progress.level+1;setProgress(prev=>_objectSpread(_objectSpread({},prev),{},{level:newLevel}));showNotification(\"YETK\\u0130NL\\u0130K SEV\\u0130YES\\u0130 ARTTI! YS \".concat(newLevel,\"'e ula\\u015Ft\\u0131n!\"));}// 3. localStorage'a kaydet\nconst dataToSave=_objectSpread(_objectSpread({},progress),{},{completedProtocols:Array.from(progress.completedProtocols),purchasedItems:Array.from(progress.purchasedItems),unlockedAchievements:Array.from(progress.unlockedAchievements)});localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(dataToSave));},[progress]);// DÜZELTME: Sadece state'i güncelleyen tekil fonksiyonlar\nconst completeProtocol=protocol=>{if(!progress.completedProtocols.has(protocol.id)){setProgress(prev=>_objectSpread(_objectSpread({},prev),{},{ap:prev.ap+protocol.ap,vk:prev.vk+protocol.vk,completedProtocols:new Set(prev.completedProtocols).add(protocol.id)}));}};const purchaseLabItem=item=>{if(progress.vk>=item.cost&&!progress.purchasedItems.has(item.id)){setProgress(prev=>_objectSpread(_objectSpread({},prev),{},{vk:prev.vk-item.cost,purchasedItems:new Set(prev.purchasedItems).add(item.id)}));showNotification(\"\".concat(item.name,\" sat\\u0131n al\\u0131nd\\u0131!\"));}};const value=_objectSpread(_objectSpread({},progress),{},{LEVEL_THRESHOLDS,notification,completeProtocol,purchaseLabItem});return/*#__PURE__*/_jsx(UserProgressContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","allAchievements","jsx","_jsx","LOCAL_STORAGE_KEY","UserProgressContext","useUserProgress","LEVEL_THRESHOLDS","UserProgressProvider","_ref","children","progress","setProgress","savedProgress","localStorage","getItem","parsed","JSON","parse","ap","vk","level","completedProtocols","Set","purchasedItems","unlockedAchievements","error","console","notification","setNotification","showNotification","message","setTimeout","forEach","ach","has","id","condition","prev","_objectSpread","add","concat","name","nextLevelThreshold","newLevel","dataToSave","Array","from","setItem","stringify","completeProtocol","protocol","purchaseLabItem","item","cost","value","Provider"],"sources":["C:/Users/Juuzou/Desktop/YKS/genesis/src/contexts/UserProgressContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { allAchievements } from '../data/achievements';\r\n\r\nconst LOCAL_STORAGE_KEY = 'projeGenesisUserProgress';\r\nconst UserProgressContext = createContext();\r\n\r\nexport const useUserProgress = () => useContext(UserProgressContext);\r\n\r\nconst LEVEL_THRESHOLDS = [0, 500, 1500, 4000, 8000, 15000, 25000, 40000, 60000, 85000, 120000];\r\n\r\nexport const UserProgressProvider = ({ children }) => {\r\n  const [progress, setProgress] = useState(() => {\r\n    try {\r\n      const savedProgress = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n      if (savedProgress) {\r\n        const parsed = JSON.parse(savedProgress);\r\n        // DÜZELTME: Tüm Set'lerin doğru şekilde yeniden oluşturulması\r\n        return {\r\n          ap: parsed.ap || 0,\r\n          vk: parsed.vk || 0,\r\n          level: parsed.level || 1,\r\n          completedProtocols: new Set(parsed.completedProtocols || []),\r\n          purchasedItems: new Set(parsed.purchasedItems || []),\r\n          unlockedAchievements: new Set(parsed.unlockedAchievements || []),\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to parse progress from localStorage\", error);\r\n    }\r\n    // DÜZELTME: Başlangıç state'inde tüm alanların olması\r\n    return {\r\n      ap: 0, vk: 0, level: 1,\r\n      completedProtocols: new Set(),\r\n      purchasedItems: new Set(),\r\n      unlockedAchievements: new Set(),\r\n    };\r\n  });\r\n\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  const showNotification = (message) => {\r\n    setNotification(message);\r\n    setTimeout(() => setNotification(null), 4000);\r\n  };\r\n  \r\n  // DÜZELTME: Tek ve birleştirilmiş useEffect\r\n  useEffect(() => {\r\n    // 1. Başarımları kontrol et\r\n    allAchievements.forEach(ach => {\r\n      if (!progress.unlockedAchievements.has(ach.id) && ach.condition(progress)) {\r\n        setProgress(prev => ({\r\n            ...prev,\r\n            unlockedAchievements: new Set(prev.unlockedAchievements).add(ach.id),\r\n        }));\r\n        showNotification(`Kilometre Taşı Ulaşıldı: ${ach.name}`);\r\n      }\r\n    });\r\n\r\n    // 2. Seviye atlamayı kontrol et\r\n    const nextLevelThreshold = LEVEL_THRESHOLDS[progress.level];\r\n    if (nextLevelThreshold && progress.ap >= nextLevelThreshold) {\r\n        const newLevel = progress.level + 1;\r\n        setProgress(prev => ({ ...prev, level: newLevel }));\r\n        showNotification(`YETKİNLİK SEVİYESİ ARTTI! YS ${newLevel}'e ulaştın!`);\r\n    }\r\n\r\n    // 3. localStorage'a kaydet\r\n    const dataToSave = {\r\n      ...progress,\r\n      completedProtocols: Array.from(progress.completedProtocols),\r\n      purchasedItems: Array.from(progress.purchasedItems),\r\n      unlockedAchievements: Array.from(progress.unlockedAchievements),\r\n    };\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(dataToSave));\r\n  }, [progress]);\r\n\r\n  // DÜZELTME: Sadece state'i güncelleyen tekil fonksiyonlar\r\n  const completeProtocol = (protocol) => {\r\n    if (!progress.completedProtocols.has(protocol.id)) {\r\n      setProgress(prev => ({\r\n        ...prev,\r\n        ap: prev.ap + protocol.ap,\r\n        vk: prev.vk + protocol.vk,\r\n        completedProtocols: new Set(prev.completedProtocols).add(protocol.id),\r\n      }));\r\n    }\r\n  };\r\n  \r\n  const purchaseLabItem = (item) => {\r\n    if (progress.vk >= item.cost && !progress.purchasedItems.has(item.id)) {\r\n      setProgress(prev => ({\r\n        ...prev,\r\n        vk: prev.vk - item.cost,\r\n        purchasedItems: new Set(prev.purchasedItems).add(item.id),\r\n      }));\r\n       showNotification(`${item.name} satın alındı!`);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...progress,\r\n    LEVEL_THRESHOLDS,\r\n    notification,\r\n    completeProtocol,\r\n    purchaseLabItem,\r\n  };\r\n\r\n  return (\r\n    <UserProgressContext.Provider value={value}>\r\n      {children}\r\n    </UserProgressContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}