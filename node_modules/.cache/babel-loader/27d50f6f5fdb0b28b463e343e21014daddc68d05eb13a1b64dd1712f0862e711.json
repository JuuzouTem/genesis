{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juuzou\\\\Desktop\\\\YKS\\\\genesis\\\\src\\\\components\\\\dashboard\\\\QuestCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useCurrentTime } from '../../hooks/useCurrentTime';\n\n// Zamanı parse etmek için yardımcı fonksiyon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parseTime = timeStr => {\n  const [start, end] = timeStr.split('-');\n  const [startH, startM] = start.split(':').map(Number);\n  const [endH, endM] = end.split(':').map(Number);\n  const startTime = new Date();\n  startTime.setHours(startH, startM, 0, 0);\n  const endTime = new Date();\n  endTime.setHours(endH, endM, 0, 0);\n  return {\n    startTime,\n    endTime\n  };\n};\n\n// ... Stil tanımlamaları (Card, Title vs.) ...\nconst TimerContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.9rem;\n  color: ${({\n  theme\n}) => theme.colors.textSecondary};\n  margin-bottom: 1rem;\n`;\n\n// Card stiline yeni durumlar ekleyelim\n_c = TimerContainer;\nconst Card = styled.div`\n  /* ... önceki stiller ... */\n  ${({\n  status\n}) => {\n  if (status === 'locked') return css`opacity: 0.4; filter: grayscale(80%);`;\n  if (status === 'missed') return css`border-left-color: ${({\n    theme\n  }) => theme.colors.accent}; opacity: 0.5;`;\n}}\n`;\n_c2 = Card;\nfunction formatDuration(seconds) {\n  if (seconds < 0) seconds = 0;\n  const h = Math.floor(seconds / 3600).toString().padStart(2, '0');\n  const m = Math.floor(seconds % 3600 / 60).toString().padStart(2, '0');\n  const s = Math.floor(seconds % 60).toString().padStart(2, '0');\n  return `${h}:${m}:${s}`;\n}\nfunction QuestCard({\n  protocol,\n  onComplete,\n  isCompleted\n}) {\n  _s();\n  const currentTime = useCurrentTime();\n  const [taskStartedTime, setTaskStartedTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const {\n    startTime,\n    endTime\n  } = useMemo(() => parseTime(protocol.time), [protocol.time]);\n  const status = useMemo(() => {\n    if (isCompleted) return 'completed';\n    if (currentTime < startTime) return 'locked';\n    if (currentTime > endTime) return 'missed';\n    return 'available';\n  }, [currentTime, startTime, endTime, isCompleted]);\n  useEffect(() => {\n    if (taskStartedTime) {\n      const interval = setInterval(() => {\n        setElapsedTime(Math.floor((new Date() - taskStartedTime) / 1000));\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [taskStartedTime]);\n  const handleStart = () => {\n    setTaskStartedTime(new Date());\n    // Denemeler için başladığında tamamlanmış sayılır (seri için)\n    if (protocol.title.includes('SİMÜLASYON')) {\n      onComplete(protocol);\n    }\n  };\n  const timeRemaining = Math.floor((endTime - currentTime) / 1000);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    status: status,\n    isCompleted: isCompleted,\n    children: [/*#__PURE__*/_jsxDEV(TimerContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Biti\\u015Fe Kalan: \", formatDuration(timeRemaining)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), taskStartedTime && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Ge\\xE7en S\\xFCre: \", formatDuration(elapsedTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), status === 'locked' && /*#__PURE__*/_jsxDEV(ActionButton, {\n      disabled: true,\n      children: [\"K\\u0130L\\u0130TL\\u0130 (Ba\\u015Flang\\u0131\\xE7: \", protocol.time.split('-')[0], \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }, this), status === 'available' && !taskStartedTime && /*#__PURE__*/_jsxDEV(ActionButton, {\n      onClick: handleStart,\n      children: \"PROTOKOL\\xDC BA\\u015ELAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 60\n    }, this), status === 'available' && taskStartedTime && !isCompleted && /*#__PURE__*/_jsxDEV(ActionButton, {\n      onClick: () => onComplete(protocol),\n      children: \"PROTOKOL\\xDC TAMAMLA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 75\n    }, this), status === 'completed' && /*#__PURE__*/_jsxDEV(ActionButton, {\n      disabled: true,\n      children: \"VER\\u0130 ELDE ED\\u0130LD\\u0130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 40\n    }, this), status === 'missed' && /*#__PURE__*/_jsxDEV(ActionButton, {\n      disabled: true,\n      children: \"G\\xD6REV KA\\xC7IRILDI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestCard, \"cS6wpFWDU5fbNwmxigvyGOrKBFE=\", false, function () {\n  return [useCurrentTime];\n});\n_c3 = QuestCard;\nexport default QuestCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TimerContainer\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"QuestCard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","styled","css","useCurrentTime","jsxDEV","_jsxDEV","parseTime","timeStr","start","end","split","startH","startM","map","Number","endH","endM","startTime","Date","setHours","endTime","TimerContainer","div","theme","colors","textSecondary","_c","Card","status","accent","_c2","formatDuration","seconds","h","Math","floor","toString","padStart","m","s","QuestCard","protocol","onComplete","isCompleted","_s","currentTime","taskStartedTime","setTaskStartedTime","elapsedTime","setElapsedTime","time","interval","setInterval","clearInterval","handleStart","title","includes","timeRemaining","children","fileName","_jsxFileName","lineNumber","columnNumber","ActionButton","disabled","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/Juuzou/Desktop/YKS/genesis/src/components/dashboard/QuestCard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useCurrentTime } from '../../hooks/useCurrentTime';\r\n\r\n// Zamanı parse etmek için yardımcı fonksiyon\r\nconst parseTime = (timeStr) => {\r\n    const [start, end] = timeStr.split('-');\r\n    const [startH, startM] = start.split(':').map(Number);\r\n    const [endH, endM] = end.split(':').map(Number);\r\n\r\n    const startTime = new Date();\r\n    startTime.setHours(startH, startM, 0, 0);\r\n\r\n    const endTime = new Date();\r\n    endTime.setHours(endH, endM, 0, 0);\r\n    \r\n    return { startTime, endTime };\r\n};\r\n\r\n// ... Stil tanımlamaları (Card, Title vs.) ...\r\nconst TimerContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 0.9rem;\r\n  color: ${({ theme }) => theme.colors.textSecondary};\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\n// Card stiline yeni durumlar ekleyelim\r\nconst Card = styled.div`\r\n  /* ... önceki stiller ... */\r\n  ${({ status }) => {\r\n    if (status === 'locked') return css`opacity: 0.4; filter: grayscale(80%);`;\r\n    if (status === 'missed') return css`border-left-color: ${({ theme }) => theme.colors.accent}; opacity: 0.5;`;\r\n  }}\r\n`;\r\n\r\nfunction formatDuration(seconds) {\r\n    if (seconds < 0) seconds = 0;\r\n    const h = Math.floor(seconds / 3600).toString().padStart(2, '0');\r\n    const m = Math.floor((seconds % 3600) / 60).toString().padStart(2, '0');\r\n    const s = Math.floor(seconds % 60).toString().padStart(2, '0');\r\n    return `${h}:${m}:${s}`;\r\n}\r\n\r\nfunction QuestCard({ protocol, onComplete, isCompleted }) {\r\n    const currentTime = useCurrentTime();\r\n    const [taskStartedTime, setTaskStartedTime] = useState(null);\r\n    const [elapsedTime, setElapsedTime] = useState(0);\r\n\r\n    const { startTime, endTime } = useMemo(() => parseTime(protocol.time), [protocol.time]);\r\n\r\n    const status = useMemo(() => {\r\n        if (isCompleted) return 'completed';\r\n        if (currentTime < startTime) return 'locked';\r\n        if (currentTime > endTime) return 'missed';\r\n        return 'available';\r\n    }, [currentTime, startTime, endTime, isCompleted]);\r\n\r\n    useEffect(() => {\r\n        if (taskStartedTime) {\r\n            const interval = setInterval(() => {\r\n                setElapsedTime(Math.floor((new Date() - taskStartedTime) / 1000));\r\n            }, 1000);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [taskStartedTime]);\r\n\r\n    const handleStart = () => {\r\n        setTaskStartedTime(new Date());\r\n        // Denemeler için başladığında tamamlanmış sayılır (seri için)\r\n        if (protocol.title.includes('SİMÜLASYON')) {\r\n            onComplete(protocol);\r\n        }\r\n    };\r\n    \r\n    const timeRemaining = Math.floor((endTime - currentTime) / 1000);\r\n\r\n    return (\r\n        <Card status={status} isCompleted={isCompleted}>\r\n            {/* ... CardHeader, Description ... */}\r\n            <TimerContainer>\r\n                <span>Bitişe Kalan: {formatDuration(timeRemaining)}</span>\r\n                {taskStartedTime && <span>Geçen Süre: {formatDuration(elapsedTime)}</span>}\r\n            </TimerContainer>\r\n\r\n            {status === 'locked' && <ActionButton disabled>KİLİTLİ (Başlangıç: {protocol.time.split('-')[0]})</ActionButton>}\r\n            {status === 'available' && !taskStartedTime && <ActionButton onClick={handleStart}>PROTOKOLÜ BAŞLAT</ActionButton>}\r\n            {status === 'available' && taskStartedTime && !isCompleted && <ActionButton onClick={() => onComplete(protocol)}>PROTOKOLÜ TAMAMLA</ActionButton>}\r\n            {status === 'completed' && <ActionButton disabled>VERİ ELDE EDİLDİ</ActionButton>}\r\n            {status === 'missed' && <ActionButton disabled>GÖREV KAÇIRILDI</ActionButton>}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default QuestCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}